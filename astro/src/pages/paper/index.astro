---
import Layout from '../../layouts/Layout.astro';
import { AWS_CLOUDFRONT_BASE_URL } from 'astro:env/server'
---

<script is:inline define:vars={{ AWS_CLOUDFRONT_BASE_URL }}>

  const queryParams = new URLSearchParams(location.search);
  const paperId = +queryParams.get('paperId');

  const batchNo = `${Math.floor(paperId / 1000)}`.padStart(4, '0');

  fetch(`${AWS_CLOUDFRONT_BASE_URL}/web-assets/papers/papers-${batchNo}.json`)
    .then(response => response.json())
    .then(batch => {
      document.addEventListener('alpine:init', () => {
        const paper = batch.find(p => p.id === paperId);
        Alpine.data('paper', () => ({
          paper: {
            ...paper,
            files: paper.files.map(file => ({
              ...file,
              fileSizeDisplay: `(${formatFileSize(file.size || 0)})`
            }))
          },
          selectedFile: paper.files.length > 0 ? paper.files[0].id : null,
          documentUrl: paper.files.length > 0 ? paper.files[0].url : null,
          fileSizeOk: paper.files.length > 0 && (paper.files[0].size || 0) <= 1024 * 1024,
          fileSizeDisplay: formatFileSize(paper.files[0].size || 0),
          selectFile: function(fileId) {

            if (fileId) {
              const file = paper?.files.find(f => f.id === fileId);
              if (file) {
                this.selectedFile = fileId;
                this.documentUrl = file.url;
                this.fileSizeOk = (file.size || 0) <= 1024 * 1024;
                this.fileSizeDisplay = `(${formatFileSize(file.size || 0)})`;
              }
            } else {
              this.selectedFile = null;
              this.documentUrl = null;
              this.fileSizeOk = true;
              this.fileSizeDisplay = '';
            }

          }
        }));
      })

    });

  function formatFileSize(size) {
    const units = ['B', 'KB', 'MB', 'GB', 'TB'];
    let unitIndex = 0;
    let fileSize = size;
    while (fileSize >= 1024 && unitIndex < units.length) {
      fileSize /= 1024;
      unitIndex++;
    }

    return `${fileSize.toFixed(2)} ${units[unitIndex]}`;
  }

</script>

<Layout>

  <div x-data="paper">

    <div class="lg:flex lg:items-center lg:justify-between">
      <div class="min-w-0 flex-1">
        <h2 class="mt-2 text-2xl/7 font-bold text-gray-900 text-wrap sm:text-3xl sm:tracking-tight" x-text="paper.title"></h2>
        <div class="mt-1 text-sm text-gray-500">
          <span x-text="paper.reference"></span>
          -
          <span x-text="paper.type"></span>
        </div>
      </div>
    </div>

    <div class="mt-10 hidden md:block">

      <div class="flex flex-row md:space-x-5 lg:space-x-10">
        <div class="w-1/4">

          <nav class="flex flex-1 flex-col">
            <ul role="list" class="-mx-2 space-y-1">
              <template x-for="file in paper.files">
                <li
                  @click="selectedFile !== file.id && selectFile(file.id)"
                  class="flex flex-col rounded-md p-2 pl-3 text-sm"
                  :class="{ 'bg-gray-50': selectedFile === file.id, 'hover:bg-gray-50': selectedFile !== file.id, 'text-gray-700': selectedFile === file.id, 'text-indigo-600': selectedFile !== file.id, 'hover:cursor-pointer': selectedFile !== file.id }">
                  <span
                    :class="{ 'text-gray-900': selectedFile === file.id, 'text-indigo-600': selectedFile !== file.id }"
                    x-text="file.name"
                  ></span>
                  <span class="text-xs text-gray-500" x-text="file.fileSizeDisplay"></span>
                </li>
              </template>
            </ul>
          </nav>

        </div>
        <div class="w-3/4">
          <iframe
            x-show="fileSizeOk"
            :src="documentUrl"
            style="width: 100%; height: 90vh; border: 0"
            loading="lazy"
          ></iframe>

          <div
            x-show="!fileSizeOk"
            class="rounded-md bg-blue-100 p-4 border border-blue-400/20"
          >
            <div class="flex">
              <div class="shrink-0">
                <svg class="size-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3 text-sm text-blue-700">
                <p>Die Datei ist zu gro√ü, um hier angezeigt zu werden.</p>
              </div>
            </div>
            <a
              class="mt-4 inline-flex rounded-md bg-white px-2.5 py-1.5 text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
              :href="documentUrl"
              target="_blank"
            >
              PDF herunterladen <span class="ml-1" x-text="fileSizeDisplay"></span>
            </a>
          </div>

        </div>
      </div>

    </div>

    <div class="mt-10 md:hidden">

      <ul role="list" class="space-y-2">
        <template x-for="file in paper.files">
          <li class="rounded-md p-2 pl-3 text-sm bg-gray-50 shadow">
            <a
              :href="file.url"
              target="_blank"
              class="flex flex-col space-y-1"
            >
              <span class="text-indigo-600" x-text="file.name"></span>
              <span class="text-gray-500" x-text="file.fileSizeDisplay"></span>
            </a>
          </li>
        </template>
      </ul>

    </div>

  </div>

</Layout>

