---
import PageLayout from '@layouts/PageLayout.astro';
import {
  type ElectoralPeriodWithSessionsProps,
  getElectoralPeriodWithSessionsPaths
} from '../_helpers';
import { type BreadcrumbItem } from '@components/BreadcrumbMenu.astro';
import PersonsList from './_persons-list.astro';
import PersonsGraph from './_persons-graph.astro';

export const getStaticPaths = getElectoralPeriodWithSessionsPaths;

const { electoralPeriodId } = Astro.params;
const { electoralPeriod, sessionInputs } =
  Astro.props as ElectoralPeriodWithSessionsProps;

const breadcrumbItems: BreadcrumbItem[] = [
  {
    name: electoralPeriod.name,
    href: `/ep/${electoralPeriodId}`
  },
  {
    name: 'Personen',
    href: null
  }
];
---

<PageLayout
  pageTitle="Persons"
  electoralPeriod={electoralPeriod}
  breadcrumbItems={breadcrumbItems}
>
  <div
    id="tabs"
    role="tablist"
    class="tabs tabs-lift"
    x-data="tabs"
    data-electoral-period-id={electoralPeriod.id}
  >
    <input
      role="tab"
      class="tab"
      aria-label="Liste"
      type="radio"
      name="demo-tabs-radio"
      :checked="currentTab === 'list'"
      @change="history.pushState(null, '', `/ep/${electoralPeriodId}/persons?tab=list`); currentTab = 'list'"
    />
    <div class="tab-content border-base-200 bg-base-100 p-6">
      <PersonsList
        electoralPeriod={electoralPeriod}
        sessionInputs={sessionInputs}
      />
    </div>

    <input
      role="tab"
      class="tab"
      aria-label="Grafik"
      type="radio"
      name="demo-tabs-radio"
      :checked="currentTab === 'graph'"
      @change="history.pushState(null, '', `/ep/${electoralPeriodId}/persons?tab=graph`); currentTab = 'graph'"
    />
    <div class="tab-content border-base-200 bg-base-100 p-6">
      <PersonsGraph
        electoralPeriod={electoralPeriod}
        sessionInputs={sessionInputs}
      />
    </div>
  </div>
</PageLayout>

<script>
  import Alpine from 'alpinejs';

  document.addEventListener('alpine:init', () => {
    Alpine.data('tabs', () => {
      const currentUrl = new URL(window.location.href);
      const currentTab = currentUrl.searchParams.get('tab') || 'list';
      const tabsDivElement = document.getElementById(
        'tabs'
      ) as HTMLDivElement;
      const electoralPeriodId = tabsDivElement.dataset.electoralPeriodId;
      return { currentTab, electoralPeriodId };
    });
  });
</script>
