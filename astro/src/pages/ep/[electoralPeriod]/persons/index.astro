---
import BreadcrumbMenuLayout from '../../../../layouts/BreadcrumbMenuLayout.astro';
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import type { Registry } from '../../../../model/registry';
import type { SessionInput } from '../../../../model/SessionInput';
import {
  getVotingsSuccessRate,
  formatPercent,
  formatSpeakingTime
} from './_helpers';
import { calcAbstentionRateOfPerson } from '../../../../data-analysis/AbstentionRate';
import { calcParticipationRateOfPerson } from '../../../../data-analysis/ParticipationRate';
import { calcPersonsForces } from '../../../../data-analysis/PersonsForces';
import { calcSpeakingTimeOfPerson } from '../../../../data-analysis/SpeakingTime';

type Props = {
  electoralPeriod: Registry;
  sessionInputs: SessionInput[];
};

export const getStaticPaths = (async () => {
  const electoralPeriodsCollection = await getCollection('electoralPeriods');
  const sessionConfigsCollection = await getCollection('sessionConfigs');
  const sessionSpeechesCollection = await getCollection('sessionSpeeches');

  const sessionScansCollection = await getCollection('sessionScans');
  return electoralPeriodsCollection.map(electoralPeriod => {
    const sessionConfigs = sessionConfigsCollection
      .filter(sessionConfig => sessionConfig.id.startsWith(`${electoralPeriod.id}/`))
      .map(sessionConfig => ({ sessionId: sessionConfig.id, config: sessionConfig.data }));
    const sessionScans = sessionScansCollection
      .filter(sessionScan => sessionScan.id.startsWith(`${electoralPeriod.id}/`))
      .map(sessionScan => ({ sessionId: sessionScan.id, scan: sessionScan.data }));
    const sessionSpeeches = sessionSpeechesCollection
      .filter(sessionSpeech => sessionSpeech.id.startsWith(`${electoralPeriod.id}/`))
      .map(sessionSpeech => ({ sessionId: sessionSpeech.id, speeches: sessionSpeech.data }));

    const sessionInputs = sessionConfigs.map(sessionConfig => {
      const sessionScan = sessionScans.find(
        sessionScan => sessionScan.sessionId === sessionConfig.sessionId
      );
      const speeches = sessionSpeeches
        .filter(sessionSpeech => sessionSpeech.sessionId === sessionConfig.sessionId)
        .flatMap(sessionSpeech => sessionSpeech.speeches);
      return {
        sessionId: sessionConfig.sessionId,
        config: sessionConfig.config,
        votings: sessionScan?.scan || [],
        speeches
      } as SessionInput;
    });

    return {
      params: { electoralPeriod: electoralPeriod.id },
      props: { electoralPeriod: electoralPeriod.data, sessionInputs }
    };
  });
}) satisfies GetStaticPaths;

const { electoralPeriod, sessionInputs } = Astro.props as Props;

const persons = electoralPeriod.persons
  .map(person => {

    const faction = electoralPeriod.factions.find(faction => faction.id === person.factionId)!.name;
    const party = electoralPeriod.parties.find(party => party.id === person.partyId)?.name || 'parteilos';

    const relevantSessions = sessionInputs.filter(
      session => session.config.names.find(name => name.name === person.name)
    );

    const participationRate = calcParticipationRateOfPerson(person, relevantSessions);
    const votingsSuccessRate = getVotingsSuccessRate(person, relevantSessions);
    const abstentionRate = calcAbstentionRateOfPerson(person, relevantSessions);
    const speakingTime = calcSpeakingTimeOfPerson(person, relevantSessions);

    return {
      id: person.id,
      name: person.name,
      factionId: person.factionId,
      faction,
      partyId: person.partyId,
      party,
      participationRate,
      votingsSuccessRate,
      abstentionRate,
      speakingTime
    }
  })
  .toSorted((a, b) => a.name.localeCompare(b.name));

const personsForces = calcPersonsForces(electoralPeriod, sessionInputs);

---
<BreadcrumbMenuLayout pageTitle="Personen" electoralPeriod={electoralPeriod}>

  <h1 class="text-3xl font-bold text-gray-900 sm:tracking-tight">Personen</h1>

  <div
    x-data={`{
      currentTab: 'persons-list',
      }`}
  >

    <div class="border-b border-gray-200 pb-5 sm:pb-0" >
      <div class="mt-5 sm:mt-10">
        <div class="grid grid-cols-1 sm:hidden">
          <select
            aria-label="WÃ¤hle eine Unterseite aus"
            class="col-start-1 row-start-1 w-full appearance-none rounded-md bg-white py-2 pl-3 pr-8 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
            @change="currentTab = event.target.value"
          >
            <option :selected="currentTab === 'persons-list'" value="persons-list">Liste</option>
            <option :selected="currentTab === 'persons-graph'" value="persons-graph">Grafik</option>
          </select>
          <svg class="pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end fill-gray-500" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
          </svg>
        </div>

        <div class="hidden sm:block">
          <nav class="-mb-px flex space-x-8">
            <a
              @click="currentTab = 'persons-list'"
              href="javascript:void(0)"
              class="whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium"
              :class="currentTab === 'persons-list' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'"
              :aria-current="currentTab === 'persons-list' ? 'page' : null"
            >Liste</a>
            <a
              @click="currentTab = 'persons-graph'"
              href="javascript:void(0)"
              class="whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium"
              :class="currentTab === 'persons-graph' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'"
              :aria-current="currentTab === 'persons-graph' ? 'page' : null"
            >Grafik</a>
          </nav>
        </div>
      </div>
    </div>

    <div x-cloak x-show="currentTab === 'persons-list'" class="py-3">
      <div class="overflow-x-auto">

        <table class="min-w-full divide-y divide-gray-300">
          <thead>
          <tr>
            <th scope="col" class="whitespace-nowrap py-3.5 text-left text-sm font-semibold text-gray-900">Name</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-left text-sm font-semibold text-gray-900">Fraktion</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-left text-sm font-semibold text-gray-900">Partei</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-right text-sm font-semibold text-gray-900">abgestimmt</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-right text-sm font-semibold text-gray-900">Abstimmungserfolg</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-right text-sm font-semibold text-gray-900">Stimmenthaltungen</th>
            <th scope="col" class="whitespace-nowrap py-3.5 text-right text-sm font-semibold text-gray-900">Redezeit</th>
          </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
          {persons.map(person => (
            <tr>
              <td class="py-2 pr-3 text-sm">
                <a
                  href={`/ep/${electoralPeriod.id}/person/${person.id}`}
                  class="text-blue-600 hover:underline"
                >{person.name}</a>
              </td>
              <td class="py-2 pr-3 text-sm">{person.faction}</td>
              <td class="py-2 pr-3 text-sm">{person.party}</td>
              <td class="whitespace-nowrap py-2 text-right text-sm text-gray-900">
                {person.participationRate === null ? 'n/a' : formatPercent(person.participationRate)}
              </td>
              <td class="whitespace-nowrap py-2 text-right text-sm text-gray-900">{formatPercent(person.votingsSuccessRate)}</td>
              <td class="whitespace-nowrap py-2 text-right text-sm text-gray-900">
                {person.abstentionRate === null ? 'n/a' : formatPercent(person.abstentionRate)}
              </td>
              <td class="whitespace-nowrap py-2 text-right text-sm text-gray-900">{formatSpeakingTime(person.speakingTime)}</td>
            </tr>
          ))}
          </tbody>
        </table>

      </div>
    </div>

    <div x-cloak x-show="currentTab === 'persons-graph'" class="py-3">
      <!-- TODO: https://github.com/code-for-magdeburg/StadtratWatch-web/issues/265 -->
      <canvas id="personsForcesChart"></canvas>
    </div>

  </div>

</BreadcrumbMenuLayout>
