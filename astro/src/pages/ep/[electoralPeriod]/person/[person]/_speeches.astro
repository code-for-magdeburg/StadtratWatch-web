---
import type { Registry, RegistryPerson } from '../../../../../model/registry';
import type { SessionInput } from '../../../../../model/SessionInput';
import SpeechComponent from '../../../../../components/Speech.astro';


type Props = {
  electoralPeriod: Registry;
  person: RegistryPerson;
  sessions: SessionInput[];
};

const { electoralPeriod, person, sessions } = Astro.props as Props;

const speechesBySessionDate = sessions
  .flatMap(session => ({
    sessionId: session.sessionId,
    sessionDate: session.config.date,
    config: session.config,
    speeches: session.speeches
      .filter(speech => speech.speaker === person.name)
      .toSorted((a, b) => a.start - b.start)
  }))
  .filter(session => session.speeches.length > 0)
  .toSorted((a, b) => b.sessionId.localeCompare(a.sessionId));

---

<div class="space-y-10 py-5 md:py-10">

  <div class="rounded-md bg-blue-100 p-4 border border-blue-400/20">
    <div class="flex">
      <div class="shrink-0">
        <svg class="size-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
          <path fill-rule="evenodd" d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z" clip-rule="evenodd" />
        </svg>
      </div>
      <div class="ml-3 text-sm text-blue-700 space-y-3">
        <p>Die folgenden Redebeiträge wurden automatisiert erstellt und können Fehler enthalten. Die Texte dienen nur zur Orientierung und sind nicht als offizielle Protokolle zu verstehen. Um Aufzeichnungen der Redebeiträge anzuhören, nutzen Sie bitte die Links zum jeweiligen YouTube-Video.</p>
        <p>Sollten Sie einen Fehler entdecken, können Sie uns diesen gern melden. Klicken Sie dazu auf das Flaggen-Symbol unter dem jeweiligen Redebeitrag und senden Sie uns eine Nachricht. Wir werden den Fehler umgehend prüfen und korrigieren.</p>
      </div>
    </div>
  </div>

  {speechesBySessionDate.map(session => {

    const label = new Date(session.sessionDate).toLocaleString(
      'de-DE',
      { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric',  }
    );

    return <div class="space-y-3">

      <h2 class="text-xl font-bold text-gray-900 tracking-tight">{label}</h2>

      {session.speeches.map(speech =>
        <SpeechComponent
          electoralPeriod={electoralPeriod}
          sessionId={session.sessionId}
          speech={speech}
          config={session.config}
        ></SpeechComponent>
      )}

    </div>

  })

  }

</div>
