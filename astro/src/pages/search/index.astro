---
import Layout from '../../layouts/Layout.astro';
import PaginationComponent from './Pagination.astro';
---

<Layout>

  <div x-data="search">

    <h1 class="text-3xl font-bold text-gray-900 sm:tracking-tight">Suche</h1>

    <div class="mt-3 sm:mt-5">
      <form action="/search" method="get" @submit.prevent="search()">
        <label for="search" class="sr-only">Suche</label>
        <input
          type="search"
          id="search"
          name="q"
          class="px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
          placeholder="Suche"
        />
        <button
          type="submit"
          class="mt-2 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          Suchen
        </button>
      </form>
    </div>

    <div
      x-cloak
      x-show="isReady && searchResult.totalResultItems > 0"
    >

      <ul class="mt-3 divide-y divide-gray-200">
        <template x-for="searchResultItem in searchResult.searchResultItems">
          <li class="py-4">
            <template x-if="searchResultItem.type === 'paper'">
              <a
                :href="`/paper/${searchResultItem.paper.id}`"
                class="block"
              >
                <div class="flex flex-row">
                  <div class="flex-shrink-0 flex items-center justify-center w-10 h-10 rounded-full">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 16 16"><g fill="currentColor"><path d="M5.5 7a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5"/><path d="M9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.5zm0 1v2A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1z"/></g></svg>
                  </div>
                  <div class="ml-3">
                    <span class="mt-1 text-sm text-gray-500" x-text="searchResultItem.paper.reference"></span>
                    <h2 class="text-xl font-semibold text-gray-900" x-text="searchResultItem.paper.title"></h2>
                  </div>
                </div>
                <p class="mt-1 text-sm text-gray-900" x-html="searchResultItem.paper.content"></p>
              </a>
            </template>
            <template x-if="searchResultItem.type === 'speech'">
              <a
                :href="`/ep/${searchResultItem.speech.electoralPeriod}/session/${searchResultItem.speech.session}?tab=speeches#speech-${searchResultItem.speech.start}`"
                class="block"
              >
                <div class="flex flex-row">
                  <div class="flex-shrink-0 flex items-center justify-center w-10 h-10 rounded-full">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 16 16"><g fill="currentColor"><path d="M2.678 11.894a1 1 0 0 1 .287.801a11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6s-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7s-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105"/><path d="M4 5.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8m0 2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5"/></g></svg>
                  </div>
                  <div class="ml-3">
                    <span class="mt-1 text-sm text-gray-500" x-text="formatDate(searchResultItem.speech.sessionDate)"></span>
                    <h2 class="text-xl font-semibold text-gray-900" x-text="searchResultItem.speech.speaker"></h2>
                    <span
                      class="rounded-md bg-gray-200 px-1.5 py-0.5 text-sm font-medium text-gray-600 ring-1 ring-inset ring-gray-500/20"
                      x-show="searchResultItem.speech.faction"
                      x-text="searchResultItem.speech.faction"
                    ></span>
                  </div>
                </div>
                <p class="mt-1 text-sm text-gray-900" x-html="searchResultItem.speech.content"></p>
              </a>
            </template>
          </li>
        </template>
      </ul>

      <PaginationComponent></PaginationComponent>

    </div>

    <div x-cloak x-show="isReady && searchResult.totalResultItems === 0">
      <p class="mt-5 text-lg text-gray-900">Keine Suchergebnisse gefunden.</p>
    </div>

  </div>

</Layout>

<script>

  import { search } from './_search';
  import type { SearchResult } from './_search';
  import Alpine from 'alpinejs';

  const searchParams = new URLSearchParams(window.location.search);
  const q = searchParams.get('q');
  const page = +(searchParams.get('page') || 1);

  const MAX_SELECTABLE_PAGES = 5;
  const ITEMS_PER_PAGE = 10;

  type PaginationStatus = {
    prevPageButtonDisabled: boolean;
    nextPageButtonDisabled: boolean;
    prevPagesBlockButtonHidden: boolean;
    prevPagesPage: number;
    nextPagesBlockButtonHidden: boolean;
    nextPagesPage: number;
    currentPage: number;
    pages: number[];
  };

  function getPaginationStatus(totalItems: number, currentPage: number): PaginationStatus{
    const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);
    const firstBlockPage = Math.ceil(currentPage / MAX_SELECTABLE_PAGES) * MAX_SELECTABLE_PAGES - MAX_SELECTABLE_PAGES + 1;
    const lastBlockPage = Math.min(firstBlockPage + MAX_SELECTABLE_PAGES - 1, totalPages);
    return {
      prevPageButtonDisabled: currentPage <= 1,
      nextPageButtonDisabled: currentPage >= totalPages,
      prevPagesBlockButtonHidden: currentPage <= MAX_SELECTABLE_PAGES,
      prevPagesPage: firstBlockPage - 1,
      nextPagesBlockButtonHidden: lastBlockPage >= totalPages,
      nextPagesPage: lastBlockPage + 1,
      currentPage,
      pages: Array.from({ length: lastBlockPage - firstBlockPage + 1 }, (_, i) => firstBlockPage + i)
    };
  }

  document.addEventListener('alpine:init', () => {

    Alpine.data('search', () => ({
      isReady: false,
      searchTerm: q,
      pagination: {
        prevPageButtonDisabled: true,
        nextPageButtonDisabled: true,
        prevPagesBlockButtonHidden: true,
        prevPagesPage: 1,
        nextPagesBlockButtonHidden: true,
        nextPagesPage: 1,
        currentPage: 1,
        pages: []
      } as PaginationStatus,
      searchResult: {
        totalResultItems: 0,
        searchResultItems: []
      } as SearchResult,
      async init() {
        if (q) {
          (document.getElementById('search') as HTMLInputElement).value = q || '';
          const searchResult = await search(q, page);
          this.searchResult = searchResult;
          const pagination = getPaginationStatus(searchResult.totalResultItems, page);
          this.pagination.prevPageButtonDisabled = pagination.prevPageButtonDisabled;
          this.pagination.nextPageButtonDisabled = pagination.nextPageButtonDisabled;
          this.pagination.prevPagesBlockButtonHidden = pagination.prevPagesBlockButtonHidden;
          this.pagination.prevPagesPage = pagination.prevPagesPage;
          this.pagination.nextPagesBlockButtonHidden = pagination.nextPagesBlockButtonHidden;
          this.pagination.nextPagesPage = pagination.nextPagesPage;
          this.pagination.currentPage = page;
          this.pagination.pages = pagination.pages;
          this.isReady = true;
        }
      },
      search() {
        const newSearchQuery = (document.getElementById('search') as HTMLInputElement).value;
        if (newSearchQuery !== q && newSearchQuery !== '') {
          window.location.href = `/search?q=${newSearchQuery}`;
        }
      },
      formatDate(date: string) {
        return new Date(date).toLocaleDateString('de-DE', {
          year: 'numeric',
          month: 'long',
          day: '2-digit'
        });
      }
    }));

  });

</script>
