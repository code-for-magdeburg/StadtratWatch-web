---
import {
  type ParliamentPeriodWithSessionProps,
  getParliamentPeriodWithSessionPaths,
} from '../../_helpers';
import PageLayout from '@layouts/PageLayout.astro';
import { type BreadcrumbItem } from '@components/BreadcrumbMenu.astro';
import Votings from './_votings.astro';
import Speeches from './_speeches.astro';
import SpeakingTimes from './_speaking-times.astro';
import { formatDate } from '@utils/format-date';
import MetaTags from '@components/MetaTags.astro';

export const getStaticPaths = getParliamentPeriodWithSessionPaths;

const { parliamentPeriodId, sessionId } = Astro.params;
const { parliamentPeriod, sessionInput } = Astro.props as ParliamentPeriodWithSessionProps;

const breadcrumbItems: BreadcrumbItem[] = [
  {
    name: parliamentPeriod.name,
    href: `/pp/${parliamentPeriodId}`,
  },
  {
    name: 'Sitzungen',
    href: `/pp/${parliamentPeriodId}/sessions`,
  },
  {
    name: formatDate(sessionInput.session.date),
    href: null,
  },
];

const meetingMinutesUrl = sessionInput.session.meetingMinutesUrl;
const youtubeUrl = sessionInput.session.youtubeUrl;
---

<PageLayout
  parliamentPeriod={parliamentPeriod}
  pageTitle={`Stadtratssitzung vom ${formatDate(sessionInput.session.date)}`}
  breadcrumbItems={breadcrumbItems}
>
  <MetaTags slot="srw-meta-tags" sessionDate={sessionInput.session.date} />

  <div slot="sub-page-header">
    <div class="flex items-center mt-1 gap-4">
      {
        meetingMinutesUrl && (
          <a
            href={meetingMinutesUrl}
            target="_blank"
            class="link link-primary text-xs"
          >
            <span class="iconify lucide--file-text" />
            Niederschrift
          </a>
        )
      }
      {
        youtubeUrl && (
          <a
            href={youtubeUrl}
            target="_blank"
            class="link link-primary text-xs"
          >
            <span class="iconify lucide--youtube" />
            YouTube
          </a>
        )
      }
    </div>
  </div>

  {
    !sessionInput.session.approved && (
      <div class="alert alert-warning alert-soft mb-4">
        <span class="iconify lucide--alert-triangle" />
        Die Prüfung dieser Sitzung ist noch nicht abgeschlossen. Die Daten sind unter Umständen noch unvollständig oder werden sich noch ändern.
      </div>
    )
  }

  <div
    id="tabs"
    role="tablist"
    class="tabs tabs-lift"
    x-data="session"
    data-parliament-period-id={parliamentPeriodId}
    data-session-id={sessionId}
  >
    <input
      role="tab"
      class="tab"
      aria-label="Abstimmungen"
      type="radio"
      name="demo-tabs-radio"
      :checked="currentTab === 'votings'"
      @change="history.pushState(null, '', `/pp/${parliamentPeriodId}/session/${sessionId}?tab=votings`); currentTab = 'votings'"
    />
    <div class="tab-content border-base-200 bg-base-100 p-6">
      <Votings
        parliamentPeriodId={parliamentPeriod.id}
        sessionId={sessionId}
        sessionScan={sessionInput.votings}
      />
    </div>

    <input
      role="tab"
      class="tab"
      aria-label="Redebeiträge"
      type="radio"
      name="demo-tabs-radio"
      :checked="currentTab === 'speeches'"
      @change="history.pushState(null, '', `/pp/${parliamentPeriodId}/session/${sessionId}?tab=speeches`); currentTab = 'speeches'"
    />
    <div class="tab-content border-base-200 bg-base-100 p-6">
      <Speeches parliamentPeriod={parliamentPeriod} sessionInput={sessionInput} />
    </div>

    <input
      role="tab"
      class="tab"
      aria-label="Redezeiten"
      type="radio"
      name="demo-tabs-radio"
      :checked="currentTab === 'speaking-times'"
      @change="history.pushState(null, '', `/pp/${parliamentPeriodId}/session/${sessionId}?tab=speaking-times`); currentTab = 'speaking-times'"
    />
    <div class="tab-content border-base-200 bg-base-100 p-6">
      <SpeakingTimes parliamentPeriod={parliamentPeriod} sessionInput={sessionInput} />
    </div>
  </div>
</PageLayout>

<script>
  import Alpine from 'alpinejs';

  document.addEventListener('alpine:init', () => {
    const currentUrl = new URL(window.location.href);
    const currentTab = currentUrl.searchParams.get('tab') || 'votings';

    const sessionsDivElement = document.getElementById(
      'tabs',
    ) as HTMLDivElement;
    const parliamentPeriodId = sessionsDivElement.dataset.parliamentPeriodId;
    const sessionId = sessionsDivElement.dataset.sessionId;
    Alpine.data('session', () => ({
      parliamentPeriodId,
      sessionId,
      currentTab,
    }));
  });
</script>
