---
import type { SessionSpeech } from '../model/session-speech';
import type { SessionConfig } from '../model/session-config';
import type { Registry } from '../model/registry';


type Props = {
  electoralPeriod: Registry;
  sessionId: string;
  speech: SessionSpeech;
  config: SessionConfig;
};


const { electoralPeriod, sessionId, speech, config } = Astro.props;

const faction = getFactionName(speech.speaker, config);
const youtubeUrl = getYoutubeUrl(config.youtubeUrl, speech.start);
const linkTitle = getLinkTitle(speech.speaker, config.date);
const hintMailHref = getHintMailHref(speech, config.date);
const hintMailTitle = `Hinweis zum Redebeitrag von ${speech.speaker} geben`;

function getFactionName(speaker: string, config: SessionConfig): string | null {
  return config.names.find(name => name.name === speaker)?.faction || null;
}

function formatStart(start: number): string {

  const timestamp = Math.round(start);

  const hours = Math.floor(timestamp / 3600).toString().padStart(2, '0');
  const minutes = Math.floor((timestamp % 3600) / 60).toString().padStart(2, '0');
  const seconds = Math.floor(timestamp % 60).toString().padStart(2, '0');

  return `${hours}:${minutes}:${seconds}`;

}

function formatDuration(duration: number): string {

  const roundedValue = Math.round(duration / 10) * 10;
  const hours = Math.floor(roundedValue / 3600);
  const minutes = Math.floor((roundedValue % 3600) / 60);
  const seconds = Math.floor(roundedValue % 60);

  let result = '';

  if (hours > 0) {
    result += ` ${hours}h`;
  }

  result += ` ${minutes}m`;

  result += ` ${seconds}s`;

  return result.trim();

}

function getYoutubeUrl(baseUrl: string, start: number): string {
  return `${baseUrl}?t=${start}`;
}

function getLinkTitle(speaker: string, date: string): string {
  const formattedDate = new Date(date).toLocaleString(
    'de-DE',
    { day: '2-digit', month: '2-digit', year: 'numeric' }
  );
  return `Redebeitrag von ${speaker} am ${formattedDate}`;
}

function getHintMailHref(speech: SessionSpeech, date: string): string {

  const formattedDate = new Date(date).toLocaleString(
    'de-DE',
    { day: '2-digit', month: '2-digit', year: 'numeric' }
  );
  const subject = encodeURIComponent(`Hinweis zum Redebeitrag von ${speech.speaker} am ${formattedDate}`);
  const hintMailBodyText = encodeURIComponent(
    `Hallo StadtratWatch-Team!

Ich habe einen Hinweis zum Redebeitrag von ${speech.speaker} aus der Sitzung vom ${formattedDate} (Zeitmarke: ${speech.start}):




Mit freundlichen Grüßen,

`);
  return `mailto:stadtratwatch@gmail.com?subject=${subject}&body=${hintMailBodyText}`;

}

---

<div class="divide-y divide-gray-200 overflow-hidden rounded-lg bg-white shadow" id={`speech-${speech.start}`}>

  <div class="px-4 py-5 sm:px-6">
    <div class="-ml-4 -mt-4 flex flex-wrap sm:flex-nowrap justify-between">
      <div class="ml-4 mt-4">
        <h3 class="text-base font-semibold text-gray-900">{speech.speaker}</h3>
        <div class="mt-1 flex flex-wrap gap-1">
          {faction &&
            <span class="rounded-md bg-gray-200 px-1.5 py-0.5 text-sm font-medium text-gray-600 ring-1 ring-inset ring-gray-500/20">
              {faction}
            </span>
          }
          {speech.onBehalfOf &&
            <span class="rounded-md bg-gray-200 px-1.5 py-0.5 text-sm font-medium text-gray-600 ring-1 ring-inset ring-gray-500/20">
              {speech.onBehalfOf}
            </span>
          }
        </div>
      </div>
      <div class="ml-4 mt-4 shrink-0 flex flex-col items-end">
        <p class="flex items-center space-x-1 text-sm text-gray-500">
          <svg class="size-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g fill="currentColor"><path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022zm2.004.45a7 7 0 0 0-.985-.299l.219-.976q.576.129 1.126.342zm1.37.71a7 7 0 0 0-.439-.27l.493-.87a8 8 0 0 1 .979.654l-.615.789a7 7 0 0 0-.418-.302zm1.834 1.79a7 7 0 0 0-.653-.796l.724-.69q.406.429.747.91zm.744 1.352a7 7 0 0 0-.214-.468l.893-.45a8 8 0 0 1 .45 1.088l-.95.313a7 7 0 0 0-.179-.483m.53 2.507a7 7 0 0 0-.1-1.025l.985-.17q.1.58.116 1.17zm-.131 1.538q.05-.254.081-.51l.993.123a8 8 0 0 1-.23 1.155l-.964-.267q.069-.247.12-.501m-.952 2.379q.276-.436.486-.908l.914.405q-.24.54-.555 1.038zm-.964 1.205q.183-.183.35-.378l.758.653a8 8 0 0 1-.401.432z"/><path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0z"/><path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5"/></g></svg>
          <span>{formatStart(speech.start)}</span>
        </p>
        <p class="flex items-center space-x-1 text-sm text-gray-500">
          <svg class="size-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="currentColor" d="M2.5 15a.5.5 0 1 1 0-1h1v-1a4.5 4.5 0 0 1 2.557-4.06c.29-.139.443-.377.443-.59v-.7c0-.213-.154-.451-.443-.59A4.5 4.5 0 0 1 3.5 3V2h-1a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1h-1v1a4.5 4.5 0 0 1-2.557 4.06c-.29.139-.443.377-.443.59v.7c0 .213.154.451.443.59A4.5 4.5 0 0 1 12.5 13v1h1a.5.5 0 0 1 0 1zm2-13v1c0 .537.12 1.045.337 1.5h6.326c.216-.455.337-.963.337-1.5V2zm3 6.35c0 .701-.478 1.236-1.011 1.492A3.5 3.5 0 0 0 4.5 13s.866-1.299 3-1.48zm1 0v3.17c2.134.181 3 1.48 3 1.48a3.5 3.5 0 0 0-1.989-3.158C8.978 9.586 8.5 9.052 8.5 8.351z"/></svg>
          <span>{formatDuration(speech.duration)}</span>
        </p>
      </div>
    </div>
  </div>

  <div class="px-4 py-5 sm:p-6 text-sm text-gray-600 space-y-3">
    {(speech.transcription || '').split('\n\n').map(line =>
      <p>{line}</p>
    )}
  </div>

  <div class="px-4 py-4 sm:px-6">

    <div class="flex justify-between items-center">
      <div class="text-sm text-gray-500">
        <a href={youtubeUrl} target="_blank" class="hover:underline">In YouTube öffnen</a>
      </div>
      <div class="flex text-sm text-gray-500 space-x-3 text-left">
        <a
          href={`/ep/${electoralPeriod.id}/session/${sessionId}?tab=speeches#speech-${speech.start}`}
          class="hover:underline"
          title={linkTitle}
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 16 16"><g fill="currentColor"><path d="M4.715 6.542L3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1 1 0 0 0-.154.199a2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4 4 0 0 1-.128-1.287z"/><path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243z"/></g></svg>
        </a>
        <a
          href={hintMailHref}
          class="hover:underline"
          title={hintMailTitle}
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 16 16"><path fill="currentColor" d="M14.778.085A.5.5 0 0 1 15 .5V8a.5.5 0 0 1-.314.464L14.5 8l.186.464l-.003.001l-.006.003l-.023.009a12 12 0 0 1-.397.15c-.264.095-.631.223-1.047.35c-.816.252-1.879.523-2.71.523c-.847 0-1.548-.28-2.158-.525l-.028-.01C7.68 8.71 7.14 8.5 6.5 8.5c-.7 0-1.638.23-2.437.477A20 20 0 0 0 3 9.342V15.5a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 1 0v.282c.226-.079.496-.17.79-.26C4.606.272 5.67 0 6.5 0c.84 0 1.524.277 2.121.519l.043.018C9.286.788 9.828 1 10.5 1c.7 0 1.638-.23 2.437-.477a20 20 0 0 0 1.349-.476l.019-.007l.004-.002h.001M14 1.221c-.22.078-.48.167-.766.255c-.81.252-1.872.523-2.734.523c-.886 0-1.592-.286-2.203-.534l-.008-.003C7.662 1.21 7.139 1 6.5 1c-.669 0-1.606.229-2.415.478A21 21 0 0 0 3 1.845v6.433c.22-.078.48-.167.766-.255C4.576 7.77 5.638 7.5 6.5 7.5c.847 0 1.548.28 2.158.525l.028.01C9.32 8.29 9.86 8.5 10.5 8.5c.668 0 1.606-.229 2.415-.478A21 21 0 0 0 14 7.655V1.222z"/></svg>
        </a>
      </div>
    </div>

  </div>

</div>
